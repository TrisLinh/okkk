import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import java.io.IOException;

public class Btl {
    public static class ElectricityMapper extends Mapper<Object, Text, Text, IntWritable> {
        private Text year = new Text();
        private IntWritable avgConsumption = new IntWritable();

        @Override
        protected void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            String[] fields = value.toString().split("\\s+");
            if (fields.length == 14) {
                year.set(fields[0]);
                avgConsumption.set(Integer.parseInt(fields[13]));
                context.write(year, avgConsumption);
            }
        }
    }

    public static class ElectricityReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
        private static final int MAX_CONSUMPTION = 30;

        @Override
        protected void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
            for (IntWritable value : values) {
                if (value.get() > MAX_CONSUMPTION) {
                    context.write(key, value);
                }
            }
        }
    }
}
